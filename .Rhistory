#install.packages('GGally')
library(scatterplot3d)
colors <- c("#999999", "#E69F00")
#install.packages("GGally")
library(ggplot2)
#make a dataframe with country and our consideration of important elements
df.coun.el<-data.frame("COUN" = df$COUN, "Ni"= df$Ni, "Cu"= df$Cu, "Cd"= df$Cd,
"As"= df$As, "Zn"= df$Zn, "Pb"= df$Pb, "Hg"= df$Hg)
ggpairs(df.coun.el)
abline(df.coun.el, col = "red")
####TEST-scotter3d####
#install.packages("scatterplot3d")
library(scatterplot3d)
shapes = c(16, 17, 18)
shapes <- shapes[as.numeric(df.coun.el$COUN)]
par(mfrow=c(1,1))
scatterplot3d(df.coun.el$Ni, df.coun.el$Cu, pch = shapes)
scatterplot3d(log10(df.coun.el$Ni), log10(df.coun.el$Cu), pch = shapes)
#the title of lab must be changed
#install.packages('shapes')
library(shapes)
shapes = c(16, 17, 18)
shapes <- shapes[as.numeric(df$COUN)]
colors <- c("#999999", "#E69F00", '#E500aa')
colors <- colors[as.numeric(df$COUN)]
length(colors)
length(shapes)
length(df$COUN)
scatterplot3d(df[1:4], angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)", color = colors, pch = shapes )
library(RColorBrewer)
library(RColorBrewer)
cols = brewer.pal(8, "RdYlGn")
#pal = colorRampPalette(c("blue", "red"))
pal = colorRampPalette(cols)
split.ohorizon1$order = findInterval(split.ohorizon1$Cd, sort(split.ohorizon1$Cd))
scatter3d(Ni,Cu,As, grid = FALSE, grid.col = "black", fit = "linear", surface = FALSE, fill = TRUE,
point.col = pal(nrow(split.ohorizon1))[split.ohorizon1$order], bg.col = "black",
sphere.size = 1.5, axis.scales = TRUE, axis.ticks = TRUE, axis.col = "gray", fov = 60)
split.ohorizon1 <-data.frame("COUN"= ohorizon$COUN,"VEG_ZONE"=ohorizon$VEG_ZONE, "LITO"=ohorizon$LITO,"GROUNDVEG"=ohorizon$GROUNDVEG, "Ni"=ohorizon$Ni, "Cu"=ohorizon$Cu, "Cd"=ohorizon$Cd, "As"=ohorizon$As, "Zn"=ohorizon$Zn, "Pb"=ohorizon$Pb, "Hg"=ohorizon$Hg)
Ni <- log10(split.ohorizon1$Ni)
Cu <- log10(split.ohorizon1$Cu)
Cd <- log10(split.ohorizon1$Cd)
As <- log10(split.ohorizon1$As)
Zn <- log10(split.ohorizon1$Zn)
Pb <- log10(split.ohorizon1$Pb)
Hg <- log10(split.ohorizon1$Hg)
?scatter3d
scatter3d(Ni,Cu,Pb,point.col = "red", surface.alpha= 1)
#Possible values for fit are “linear”, “quadratic”, “smooth” and “additive”
scatter3d(Ni,Cu,Pb, groups = split.ohorizon1$VEG_ZONE, grid = FALSE, fit = "linear", surface = FALSE,
ellipsoid = TRUE, ellipsoid.alpha= 0.6)
scatter3d(Ni,Cu,Pb,point.col = "red", surface.alpha= 1)
#Possible values for fit are “linear”, “quadratic”, “smooth” and “additive”
scatter3d(Ni,Cu,Pb, groups = split.ohorizon1$VEG_ZONE, grid = FALSE, fit = "linear", surface = FALSE,
ellipsoid = TRUE, ellipsoid.alpha= 0.6)
scatter3d(Pb,Hg,Zn)
library(RColorBrewer)
cols = brewer.pal(8, "RdYlGn")
install.packages(c("rgl", "car"))
install.packages(c("rgl", "car"))
library("car")
library(car)
library(rgl)
library(car)
library(car)
library(rgl)
library(car)car
car
car
library(car)
if (!require(car)) {
install.packages("car")
require(car)
}
car
carlibrary(rgl)
split.ohorizon1 <-data.frame("COUN"= ohorizon$COUN,"VEG_ZONE"=ohorizon$VEG_ZONE, "LITO"=ohorizon$LITO,"GROUNDVEG"=ohorizon$GROUNDVEG, "Ni"=ohorizon$Ni, "Cu"=ohorizon$Cu, "Cd"=ohorizon$Cd, "As"=ohorizon$As, "Zn"=ohorizon$Zn, "Pb"=ohorizon$Pb, "Hg"=ohorizon$Hg)
Ni <- log10(split.ohorizon1$Ni)
Cu <- log10(split.ohorizon1$Cu)
Cd <- log10(split.ohorizon1$Cd)
As <- log10(split.ohorizon1$As)
Zn <- log10(split.ohorizon1$Zn)
Pb <- log10(split.ohorizon1$Pb)
Hg <- log10(split.ohorizon1$Hg)
?scatter3d
scatter3d(Ni,Cu,Pb,point.col = "red", surface.alpha= 1)
#Possible values for fit are “linear”, “quadratic”, “smooth” and “additive”
scatter3d(Ni,Cu,Pb, groups = split.ohorizon1$VEG_ZONE, grid = FALSE, fit = "linear", surface = FALSE,
ellipsoid = TRUE, ellipsoid.alpha= 0.6)
scatter3d(Pb,Hg,Zn)
library(RColorBrewer)
cols = brewer.pal(8, "RdYlGn")
#pal = colorRampPalette(c("blue", "red"))
pal = colorRampPalette(cols)
split.ohorizon1$order = findInterval(split.ohorizon1$Cd, sort(split.ohorizon1$Cd))
scatter3d(Ni,Cu,As, grid = FALSE, grid.col = "black", fit = "linear", surface = FALSE, fill = TRUE,
point.col = pal(nrow(split.ohorizon1))[split.ohorizon1$order], bg.col = "black",
sphere.size = 1.5, axis.scales = TRUE, axis.ticks = TRUE, axis.col = "gray", fov = 60)
rgl.snapshot(filename = "plot.png")
#####Mapping Spatial Data
par(mfrow=c(1,1))
data(kola.background)
el=ohorizon[,"As"]
X=ohorizon[,"XCOO"]
Y=ohorizon[,"YCOO"]
plot(X,Y,frame.plot=FALSE,xaxt="n",yaxt="n",xlab="",ylab="",type="n")
plotbg(map.col=c("gray","gray","gray","gray"),add.plot=T)
bubbleFIN(X,Y,el,S=9,s=2,plottitle="",legendtitle="As [mg/kg]", text.cex=0.60,
legtitle.cex=0.70,ndigits=2)
text(min(X)+diff(range(X))*5/7,max(Y),"Exponentially",cex=0.70)
text(min(X)+diff(range(X))*5/7,max(Y)-diff(range(Y))/25,"growing dots",cex=0.70)
scalebar(761309,7373050,861309,7363050,shifttext=-0.5,shiftkm=4e4,sizetext=0.8)
Northarrow(362602,7818750,362602,7878750,362602,7838750,Alength=0.15,Aangle=15,Alwd=1.3,Tcex=1.6)
#install.packages("StatDA")
library(StatDA)
data(ohorizon)
ba <- ohorizon$Ba
n <- length(ba)
par(mfcol=c(2,2),mar=c(4,4,2,2))
edaplotlog(ba, H.freq=F,box=T,H.breaks=30,S.pch=3,S.cex=0.5,D.lwd=1.5,P.log=F,
P.main="",P.xlab="Ba [mg/kg]",P.ylab="Density",B.pch=3,B.cex=0.5,B.log=TRUE, map.col = 'rainbow')
edaplot(log10(ba),H.freq=F,box=T,S.pch=3,S.cex=0.5,D.lwd=1.5,P.ylab="Density",
P.log=T,P.logfine=c(5,10),P.main="",P.xlab="Ba [mg/kg]",B.pch=3,B.cex=0.5)
plot(sort(ba),((1:n)-0.5)/n,pch=3,cex=0.8,
main="",xlab="Ba [mg/kg]",ylab="Probability",cex.lab=1,cex.lab=1.4)
abline(h=seq(0,1,by=0.1),lty=3,col=gray(0.5))
abline(v=seq(0,1400,by=200),lty=3,col=gray(0.5))
plot(sort(log10(ba)),((1:n)-0.5)/n,pch=3,cex=0.8,
main="",xlab="Ba [mg/kg]",ylab="Probability",cex.lab=1,xaxt="n",cex.lab=1.4)
axis(1,at=log10(alog<-sort(c((10^(-50:50))%*%t(c(5,10))))),labels=alog)
abline(h=seq(0,1,by=0.1),lty=3,col=gray(0.5))
abline(v=log10(alog),lty=3,col=gray(0.5))
str(ohorizon)
library(ggplot2)
df <- ohorizon <- ohorizon[sample(nrow(ohorizon), 1000, replace = T), ]
head(df)
qplot(HUMTHI,data=df,geom='histogram',binwidth=0.1,alpha=0.8)
#####Mapping Spatial Data
par(mfrow=c(1,1))
data(kola.background)
el=ohorizon[,"As"]
X=ohorizon[,"XCOO"]
Y=ohorizon[,"YCOO"]
plot(X,Y,frame.plot=FALSE,xaxt="n",yaxt="n",xlab="",ylab="",type="n")
plotbg(map.col=c("gray","gray","gray","gray"),add.plot=T)
bubbleFIN(X,Y,el,S=9,s=2,plottitle="",legendtitle="As [mg/kg]", text.cex=0.60,
legtitle.cex=0.70,ndigits=2)
text(min(X)+diff(range(X))*5/7,max(Y),"Exponentially",cex=0.70)
text(min(X)+diff(range(X))*5/7,max(Y)-diff(range(Y))/25,"growing dots",cex=0.70)
scalebar(761309,7373050,861309,7363050,shifttext=-0.5,shiftkm=4e4,sizetext=0.8)
Northarrow(362602,7818750,362602,7878750,362602,7838750,Alength=0.15,Aangle=15,Alwd=1.3,Tcex=1.6)
el=ohorizon[,"As"]
X=ohorizon[,"XCOO"]
Y=ohorizon[,"YCOO"]
plot(X,Y,frame.plot=FALSE,xaxt="n",yaxt="n",xlab="",ylab="",type="n")
plotbg(map.col=c("gray","gray","gray","gray"),add.plot=T)
SymbLegend(X,Y,el,type="percentile",qutiles<-c(0,0.05,0.25,0.75,0.95,1),symbtype="EDA",symbmagn=0.8,
leg.position="topright",leg.title="As [mg/kg]",leg.title.cex=0.8,leg.round=2,leg.wid=4,leg.just="rig")
text(min(X)+diff(range(X))*4/7,max(Y),paste(qutiles*100,collapse=","),cex=0.8)
text(min(X)+diff(range(X))*4/7,max(Y)-diff(range(Y))/25,"Percentiles",cex=0.8)
scalebar(761309,7373050,861309,7363050,shifttext=-0.5,shiftkm=37e3,sizetext=0.8)
Northarrow(362602,7818750,362602,7878750,362602,7838750,Alength=0.15,Aangle=15,Alwd=1.3,Tcex=1.6)
#install.packages("geoR")
library(geoR)
X=ohorizon[,"XCOO"]/1000
Y=ohorizon[,"YCOO"]/1000
el=ohorizon[,"As"]
vario.b <- variog(coords=cbind(X,Y), data=el, lambda=0, max.dist=300)
vario.c <- variog(coords=cbind(X,Y), data=el, lambda=0, max.dist=300, op="cloud")
vario.bc <- variog(coords=cbind(X,Y), data=el, lambda=0, max.dist=300, bin.cloud=TRUE)
vario.s <- variog(coords=cbind(X,Y), data=el, lambda=0, max.dist=300, op="sm", band=10)
vario.0 <- variog(coords=cbind(X,Y), data=el, lambda=0, max.dist=300, dir=0, tol=pi/8)
vario.90 <- variog(coords=cbind(X,Y), data=el, lambda=0, max.dist=300, dir=pi/4, tol=pi/8)
vario.45 <- variog(coords=cbind(X,Y), data=el, lambda=0, max.dist=300, dir=pi/8, tol=pi/8)
vario.120 <- variog(coords=cbind(X,Y), data=el, lambda=0, max.dist=300, dir=3*pi/8, tol=pi/8)
data(res.eyefit.As_C)
v5=variofit(vario.b,res.eyefit.As_C,cov.model="spherical",max.dist=300)
X=ohorizon[,"XCOO"]
Y=ohorizon[,"YCOO"]
el=log10(ohorizon[,"As"])
data(kola.background)
data(bordersKola)
plot(X,Y,frame.plot=FALSE,xaxt="n",yaxt="n",xlab="",ylab="",type="n")
SmoothLegend(X,Y,el,resol=200,type="contin",whichcol="gray",
qutiles=c(0,0.05,0.25,0.50,0.75,0.90,0.95,1),borders="bordersKola",
leg.xpos.min=7.8e5,leg.xpos.max=8.0e5,leg.ypos.min=77.6e5,leg.ypos.max=78.7e5,
leg.title="mg/kg", leg.title.cex=0.7, leg.numb.cex=0.7, leg.round=2,leg.wid=4,
leg.numb.xshift=0.7e5,leg.perc.xshift=0.4e5,leg.perc.yshift=0.2e5,tit.xshift=0.35e5)
plotbg(map.col=c("gray","gray","gray","gray"),map.lwd=c(1,1,1,1),add.plot=T)
text(min(X)+diff(range(X))*4/7,max(Y),"As",cex=1)
text(min(X)+diff(range(X))*4/7,max(Y)-diff(range(Y))/28,"in o-horizon",cex=0.8)
scalebar(761309,7373050,861309,7363050,shifttext=-0.5,shiftkm=37e3,sizetext=0.8)
Northarrow(362602,7818750,362602,7878750,362602,7838750,Alength=0.15,Aangle=15,Alwd=1.3,Tcex=1.6)
View(ohorizon)
#### C KMean ######
hist(ohorizon$Ni)
hist(log10(ohorizon$Ni))
hist(ohorizon$Cu)
hist(log10(ohorizon$Cu))
hist(ohorizon$Cd)
hist(log10(ohorizon$Cd))
hist(ohorizon$As)
hist(log10(ohorizon$As))
hist(ohorizon$Zn)
hist(log10(ohorizon$Zn))
hist(ohorizon$Pb)
hist(log10(ohorizon$Pb))
hist(ohorizon$Hg)
hist(log10(ohorizon$Hg))
hist(ohorizon$Cd)
#bivariate relationships of different element
plot(log10(ohorizon$Ni),log10(ohorizon$Ni))
plot(log10(ohorizon$Ni),log10(ohorizon$Cu))
plot(log10(ohorizon$Ni),log10(ohorizon$Cd))
plot(log10(ohorizon$Ni),log10(ohorizon$As))
plot(log10(ohorizon$Ni),log10(ohorizon$Zn))
plot(log10(ohorizon$Cu),log10(ohorizon$Pb))
plot(log10(ohorizon$Ni),log10(ohorizon$Hg))
plot(log10(ohorizon$Cu),log10(ohorizon$Ni))
plot(log10(ohorizon$Cu),log10(ohorizon$Cd))
plot(log10(ohorizon$Cu),log10(ohorizon$As))
plot(log10(ohorizon$Cu),log10(ohorizon$Zn))
plot(log10(ohorizon$Cu),log10(ohorizon$Pb))
plot(log10(ohorizon$Cu),log10(ohorizon$Hg))
plot(log10(ohorizon$Cd),log10(ohorizon$Ni))
plot(log10(ohorizon$Cd),log10(ohorizon$Cu))
plot(log10(ohorizon$Cd),log10(ohorizon$As))
plot(log10(ohorizon$Cd),log10(ohorizon$Zn))
plot(log10(ohorizon$Cd),log10(ohorizon$Pb))
plot(log10(ohorizon$Cd),log10(ohorizon$Hg))
plot(log10(ohorizon$As),log10(ohorizon$Ni))
plot(log10(ohorizon$As),log10(ohorizon$Cu))
plot(log10(ohorizon$As),log10(ohorizon$Cd))
plot(log10(ohorizon$As),log10(ohorizon$Zn))
plot(log10(ohorizon$As),log10(ohorizon$Pb))
plot(log10(ohorizon$As),log10(ohorizon$Hg))
plot(log10(ohorizon$Zn),log10(ohorizon$Ni))
plot(log10(ohorizon$Zn),log10(ohorizon$Cu))
plot(log10(ohorizon$Zn),log10(ohorizon$Cd))
plot(log10(ohorizon$Zn),log10(ohorizon$As))
plot(log10(ohorizon$Zn),log10(ohorizon$Pb))
plot(log10(ohorizon$Zn),log10(ohorizon$Hg))
plot(log10(ohorizon$Pb),log10(ohorizon$Ni))
plot(log10(ohorizon$Pb),log10(ohorizon$Cu))
plot(log10(ohorizon$Pb),log10(ohorizon$Cd))
plot(log10(ohorizon$Pb),log10(ohorizon$As))
plot(log10(ohorizon$Pb),log10(ohorizon$Zn))
plot(log10(ohorizon$Pb),log10(ohorizon$Hg))
plot(log10(ohorizon$Hg),log10(ohorizon$Ni))
plot(log10(ohorizon$Hg),log10(ohorizon$Cu))
plot(log10(ohorizon$Hg),log10(ohorizon$Cd))
plot(log10(ohorizon$Hg),log10(ohorizon$As))
plot(log10(ohorizon$Hg),log10(ohorizon$Zn))
plot(log10(ohorizon$Hg),log10(ohorizon$Pb))
#
pairs(split.ohorizon)
#install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(split.ohorizon)
split.ohorizon <-data.frame("Ni"=ohorizon$Ni, "Cu"=ohorizon$Cu, "Cd"=ohorizon$Cd, "As"=ohorizon$As, "Zn"=ohorizon$Zn, "Pb"=ohorizon$Pb, "Hg"=ohorizon$Hg)
split.ohorizon1 <-data.frame("COUN"= ohorizon$COUN,"VEG_ZONE"=ohorizon$VEG_ZONE, "LITO"=ohorizon$LITO,"GROUNDVEG"=ohorizon$GROUNDVEG, "Ni"=ohorizon$Ni, "Cu"=ohorizon$Cu, "Cd"=ohorizon$Cd, "As"=ohorizon$As, "Zn"=ohorizon$Zn, "Pb"=ohorizon$Pb, "Hg"=ohorizon$Hg)
aggregate(split.ohorizon1[, 5:11], list(split.ohorizon1$COUN), mean)
aggregate(split.ohorizon1[, 5:11], list(split.ohorizon1$VEG_ZONE), mean)
aggregate(split.ohorizon1[, 5:11], list(split.ohorizon1$GROUNDVEG), mean)
split.ohorizon1$LITO<- as.character(split.ohorizon1$LITO)
split.ohorizon1$LITO[split.ohorizon1$LITO=="9"]<-"A"
split.ohorizon1$LITO[split.ohorizon1$LITO=="10"]<-"A"
split.ohorizon1$LITO[split.ohorizon1$LITO=="51"]<-"B"
split.ohorizon1$LITO[split.ohorizon1$LITO=="52"]<-"B"
split.ohorizon1$LITO[split.ohorizon1$LITO=="81"]<-"C"
split.ohorizon1$LITO[split.ohorizon1$LITO=="82"]<-"C"
split.ohorizon1$LITO[split.ohorizon1$LITO=="83"]<-"C"
split.ohorizon1$LITO[split.ohorizon1$LITO=="7"]<-"D"
library(ggplot2)
ggplot(split.ohorizon1, aes(Ni, As, LITO = "A")) + geom_point()
library(cluster)
set.seed(101)
split.ohorizon.log <- data.frame("Ni"=log10(ohorizon$Ni), "Cu"=log10(ohorizon$Cu), "Cd"=log10(ohorizon$Cd), "As"=log10(ohorizon$As), "Zn"=log10(ohorizon$Zn), "Pb"=log10(ohorizon$Pb), "Hg"=log10(ohorizon$Hg))
head(split.ohorizon.log)
head(split.ohorizon)
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 3, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0, )
split.ohorizon <-data.frame("Ni"=ohorizon$Ni, "Cu"=ohorizon$Cu, "As"=ohorizon$As)
split.ohorizon.log <- data.frame("Ni"=log10(ohorizon$Ni), "Cu"=log10(ohorizon$Cu), "As"=log10(ohorizon$As)  )
head(split.ohorizon.log)
head(split.ohorizon)
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 3, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0, )
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 2, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0, )
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 10, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0, )
split.ohorizon.log <- data.frame("Al"=log10(ohorizon$Al), "Si"=log10(ohorizon$Si), "Mg"=log10(ohorizon$Mg)  )
head(split.ohorizon.log)
head(split.ohorizon)
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 10, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0, )
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 4, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0, )
split.ohorizon.log <- data.frame("Al"=log10(ohorizon$Al), "Si"=log10(ohorizon$Si), "Mg"=log10(ohorizon$Mg), "Ca"=log10(ohorizon$Ca)  )
head(split.ohorizon.log)
head(split.ohorizon)
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 4, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0, )
split.ohorizon.log <- data.frame("Al"=log10(ohorizon$Al), "Si"=log10(ohorizon$Si), "Mg"=log10(ohorizon$Mg), "Ca"=log10(ohorizon$Ca), "SO4"=log10(ohorizon$SO4)  )
head(split.ohorizon.log)
head(split.ohorizon)
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 4, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0, )
split.ohorizon.log <- data.frame("Al"=log10(ohorizon$Al), "Si"=log10(ohorizon$Si) )
head(split.ohorizon.log)
head(split.ohorizon)
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 4, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0, )
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 3, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0, )
split.ohorizon.log <- data.frame("Si"=log10(ohorizon$Si) )
head(split.ohorizon.log)
head(split.ohorizon)
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 3, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0, )
split.ohorizon.log <- data.frame("Al"=log10(ohorizon$Al))
head(split.ohorizon.log)
head(split.ohorizon)
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 3, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0, )
plot(split.ohorizon.log )
split.ohorizon.log <- data.frame("Al"=log10(ohorizon$Al))
head(split.ohorizon.log)
head(split.ohorizon)
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 3, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0 )
View(ohorizon)
split.ohorizon.log <- data.frame("Al"=log10(ohorizon$Al),"Ni"=log10(ohorizon$Ni))
head(split.ohorizon.log)
head(split.ohorizon)
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 3, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0 )
split.ohorizon.log <- data.frame("Cu"=log10(ohorizon$Cu),"Ni"=log10(ohorizon$Ni))
head(split.ohorizon.log)
head(split.ohorizon)
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 3, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0 )
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 2, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0 )
split.ohorizon.log <- data.frame("Cu"=log10(ohorizon$Cu),"Ni"=log10(ohorizon$Ni),"Zn"=log10(ohorizon$Zn))
head(split.ohorizon.log)
head(split.ohorizon)
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 2, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0 )
split.ohorizon.log <- data.frame("Hg"=log10(ohorizon$Hg),"Cd"=log10(ohorizon$Cd),"Zn"=log10(ohorizon$Zn))
head(split.ohorizon.log)
head(split.ohorizon)
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 2, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0 )
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 3, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0 )
# Enter distance matrix
dm <- matrix(c(0,9,7,12,8,
9,0,4,2,5,
7,4,0,1,13,
12,2,1,0,6,
8,5,13,6,0),5,5, byrow = TRUE)
rownames(dm) <- colnames(dm) <- c("A","B","C","D","E")
dm <- as.dist(dm)
# Single Linkage
cs <- hclust(dm, method="single")
plot(cs)
library(StatDA)
library(ggplot2)
library(PerformanceAnalytics)
data(ohorizon)
df <- ohorizon
#add the data to variable
summary(df)
head(df)
##### (a) #####
#split the df to the important elements
df.elem <-data.frame("Ni"=df$Ni, "Cu"=df$Cu, "Cd"=df$Cd, "As"=df$As, "Zn"=df$Zn, "Pb"=df$Pb, "Hg"=df$Hg)
#make plot of the important element
plot(df.elem)
#first method of showing correlation
df.cor <- cor(df.elem)
#install.packages("GGally")
library(GGally)
ggcorr(df.cor)
#secont method of visualizing correlation
#install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(df.elem)
#first method of showing correlation
df.cor <- cor(log10(df.elem))
ggcorr(df.cor)
#install.packages("GGally")
library(GGally)
ggcorr(df.cor)
#secont method of visualizing correlation
#install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(df.elem)
chart.Correlation(log10(df.elem))
#### shapiro Test#####
shapiro.test(ohorizon$Ni)
shapiro.test(log10(ohorizon$Ni))
#### shapiro Test#####
shapiro.test(ohorizon$Ni)
shapiro.test(log10(ohorizon$Ni))
shapiro.test(log(ohorizon$Ni))
ks.test(ohorizon$Ni)
ks.test(ohorizon$Ni,sd = ohorizon$Ni)
ks.test(ohorizon$Ni,"pnorm", mean(ohorizon$Ni),sd(ohorizon$Ni))
ks.test(log10(ohorizon$Ni),"pnorm", mean(log10(ohorizon$Ni)), sd(log10(ohorizon$Ni)))
split.ohorizon <-data.frame("Ni"=ohorizon$Ni, "Cu"=ohorizon$Cu, "Cd"=ohorizon$Cd, "As"=ohorizon$As, "Zn"=ohorizon$Zn, "Pb"=ohorizon$Pb, "Hg"=ohorizon$Hg)
split.ohorizon1 <-data.frame("COUN"= ohorizon$COUN,"VEG_ZONE"=ohorizon$VEG_ZONE, "LITO"=ohorizon$LITO,"GROUNDVEG"=ohorizon$GROUNDVEG, "Ni"=ohorizon$Ni, "Cu"=ohorizon$Cu, "Cd"=ohorizon$Cd, "As"=ohorizon$As, "Zn"=ohorizon$Zn, "Pb"=ohorizon$Pb, "Hg"=ohorizon$Hg)
split.ohorizon1$LITO[split.ohorizon1$LITO=="9"]<-"A"
split.ohorizon1$LITO[split.ohorizon1$LITO=="10"]<-"A"
split.ohorizon1$LITO[split.ohorizon1$LITO=="51"]<-"B"
split.ohorizon1$LITO[split.ohorizon1$LITO=="52"]<-"B"
split.ohorizon1$LITO[split.ohorizon1$LITO=="81"]<-"C"
split.ohorizon1$LITO[split.ohorizon1$LITO=="82"]<-"C"
split.ohorizon1$LITO[split.ohorizon1$LITO=="83"]<-"C"
split.ohorizon1$LITO[split.ohorizon1$LITO=="7"]<-"D"
library(ggplot2)
ggplot(split.ohorizon1, aes(Ni, As, LITO = "A")) + geom_point()
library(cluster)
set.seed(101)
split.ohorizon.log <- data.frame("Ni"=log10(ohorizon$Ni), "Cu"=log10(ohorizon$Cu), "Cd"=log10(ohorizon$Cd), "As"=log10(ohorizon$As), "Zn"=log10(ohorizon$Zn), "Pb"=log10(ohorizon$Pb), "Hg"=log10(ohorizon$Hg))
head(split.ohorizon.log)
head(split.ohorizon)
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 3, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0, )
split.ohorizon.log <- data.frame("Ni"=log10(ohorizon$Ni), "Cu"=log10(ohorizon$Cu), "Cd"=log10(ohorizon$Cd))
head(split.ohorizon.log)
head(split.ohorizon)
split.ohorizon1.clu <- kmeans(split.ohorizon.log, 3, nstart =20)
split.ohorizon1.clu
clusplot(split.ohorizon.log, split.ohorizon1.clu$cluster, color=TRUE, shade=TRUE, labels=0,lines=0, )
df.dist <- as.dist(df)
# Single Linkage
cs <- hclust(dm, method="single")
install.packages("StatDA")
library(StatDA)
data(ohorizon)
# Enter distance matrix
df <- ohorizon
install.packages("StatDA")
install.packages("StatDA")
# Enter distance matrix
df <- ohorizon
# Enter distance matrix
df <- ohorizon
df.clust.el <- data.frame("Ni"=log10(ohorizon$Ni), "Cu"=log10(ohorizon$Cu), "Cd"=log10(ohorizon$Cd))
df.dist <- as.dist(df)
# Single Linkage
cs <- hclust(df, method="single")
#### data Test#####
shapiro.test(ohorizon$Cd)
shapiro.test(log10(ohorizon$Cd))
ks.test(log10(ohorizon$Zn),"pnorm", mean(log10(ohorizon$Zn)), sd(log10(ohorizon$Zn)))
# Enter distance matrix
df <- ohorizon
df.clust.el <- data.frame("Ni"=log10(ohorizon$Ni), "Cu"=log10(ohorizon$Cu), "Cd"=log10(ohorizon$Cd))
df.dist <- as.dist(df)
# Single Linkage
cs <- hclust(df, method="single")
plot(cs)
# Enter distance matrix
df <- ohorizon
df.clust.el <- data.frame("Ni"=log10(ohorizon$Ni), "Cu"=log10(ohorizon$Cu), "Cd"=log10(ohorizon$Cd))
df.dist <- as.dist(df.clust.el)
# Single Linkage
cs <- hclust(df.clust.el, method="single")
plot(cs)
# Enter distance matrix
df <- ohorizon
df.clust.el <- data.frame("Ni"=log10(ohorizon$Ni), "Cu"=log10(ohorizon$Cu), "Cd"=log10(ohorizon$Cd))
df.dist <- as.dist(df.clust.el)
# Single Linkage
cs <- hclust(df.clust.el, method="single")
plot(cs)
# Enter distance matrix
df <- ohorizon
df.clust.el <- data.frame("Ni"=log10(ohorizon$Ni), "Cu"=log10(ohorizon$Cu), "Cd"=log10(ohorizon$Cd))
df.dist <- as.dist(df.clust.el)
df.clust.el.mat <- data.matrix(df.clust.el)
df.dist <- as.dist(df.clust.el)
cs <- hclust(df.clust.el, method="single", )
cs <- hclust(df.dist, method="single", )
plot(cs)
