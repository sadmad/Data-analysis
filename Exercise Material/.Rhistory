# dataset
help(HairEyeColor)
HairEyeColor
# Men and women jointly
HairEyeColor[,,1] + HairEyeColor[,,2]
HEC.all <- HairEyeColor[,,1] + HairEyeColor[,,2]
# Barplot
cx <- c(rgb(0/255,0/255,0/255), rgb(163/255,118/255,67/255),
rgb(235/255,88/255,14/255), rgb(247/255,239/255,186/255))  # nicer colors
barplot(HEC.all, beside=TRUE, legend=TRUE,
col=cx)
# or
barplot(HEC.all, col=cx, legend=TRUE)
barplot(HairEyeColor[,1,], beside=TRUE, main="Brown", col=cx)
barplot(HairEyeColor[,2,], beside=TRUE, main="Blue", col=cx)
# separatly for eye color and gender
par(mfrow=c(2,2))
barplot(HairEyeColor[,1,], beside=TRUE, main="Brown", col=cx)
barplot(HairEyeColor[,2,], beside=TRUE, main="Blue", col=cx)
barplot(HairEyeColor[,3,], beside=TRUE, main="Hazel", col=cx)
barplot(HairEyeColor[,4,], beside=TRUE, main="Green", col=cx)
# or
par(mfrow=c(1,2))
barplot(HairEyeColor[,,1], beside=FALSE, main="Male", legend=TRUE, col=cx)
barplot(HairEyeColor[,,2], beside=FALSE, main="Female", legend=TRUE, col=cx)
par(mfrow=c(1,1))
# Package
library(cluster)
# Helping pages
help(agriculture)
# dataset
agriculture
# Package
library(cluster)
# dataset
agriculture
# Make variable names "visible", that is
# attach data frame to R search path
# but before attaching it into search path delete previous variable x to avoid clashes
# with the column-name x in the data frame agriculture
rm(x)
attach(agriculture)
# Scatter plot
plot(x, y, xlab="per capita GNP", ylab="perct. pop. in agriculture")
# Scatter plot
plot(x, y, xlab="per capita GNP", ylab="perct. pop. in agriculture")
# or
library(ggplot2)
qplot(x, y, xlab="per capita GNP", ylab="perct. pop. in agriculture") + stat_smooth()
?attach
# or
library(lattice)
xyplot(y ~ x, xlab="per capita GNP", ylab="perct. pop. in agriculture")
# Scatter plot
plot(x, y, xlab="per capita GNP", ylab="perct. pop. in agriculture")
xyplot(y ~ x, xlab="per capita GNP", ylab="perct. pop. in agriculture")
# new variable
detach(agriculture)
n <- nrow(agriculture)
region <- c("north", "north", "north", "south", "south", "south",
"north", "south" , "north", "north", "south" ,"north")
# or
region <- rep("north",n)
region[rownames(agriculture)%in%c("P","E","I","GR","F")] <- "south"
region
# add the new column to data frame
agriculture$region <- region
agriculture
summary(agriculture)
# better
agriculture$region <- factor(region)
summary(agriculture)
# remove old variable region from workspace
rm(region)
# Attach data frame to search path/make it "visible"
attach(agriculture)
summary(region)
par(mfrow=c(1,2))
boxplot(x ~ region, main="per capita GNP")
boxplot(y ~ region, main="perct. pop. in agriculture")
par(mfrow=c(1,1))
# or
region <- rep("north",n)
region[rownames(agriculture)%in%c("P","E","I","GR","F")] <- "south"
region
par(mfrow=c(1,2))
boxplot(x ~ region, main="per capita GNP")
boxplot(y ~ region, main="perct. pop. in agriculture")
par(mfrow=c(1,1))
?plot.trellis
bxp.x <- bwplot(x ~ region, main="per capita GNP")
bxp.y <- bwplot(y ~ region, main="perct. pop. in agriculture")
bxp.x <- bwplot(x ~ region, main="per capita GNP")
bxp.y <- bwplot(y ~ region, main="perct. pop. in agriculture")
plot(bxp.x, split=c(1,1,2,1), more=TRUE)
plot(bxp.y, split=c(2,1,2,1), more=FALSE)
agriculture
summary(agriculture)
# better
agriculture$region <- factor(region)
summary(agriculture)
# remove old variable region from workspace
rm(region)
# Attach data frame to search path/make it "visible"
attach(agriculture)
summary(region)
boxplot(x ~ region, main="per capita GNP")
library(StatDA)
df <- data(ohorizon)
df
summary(df)
df <- ohorizon
summary(df)
library(StatDA)
df <- ohorizon
data(ohorizon)
df <- ohorizon
summary(df)
boxplot(df$Ni ~ df$COUN)
boxplot(log10(df$Ni) ~ df$COUN)
boxplot(df$Ni ~ df$COUN)
boxplot(log10(df$Ni) ~ df$COUN)
library(ggplot2)
qplot(log10(df$Ni) ~ df$COUN)
qplot(log10(df$Ni) ~ log10(df~Zn) | df$COUN)
xyplot(log10(df$Ni) ~ log10(df~Zn) | df$COUN)
xyplot(log10(df$Ni) ~ log10(df$Zn) | df$COUN)
summary(df)
head(df)
xyplot(log10(df$Ni) ~ log10(df$GROUNDVEG) | df$VEG_ZONE)
xyplot(log10(df$Ni) ~ df$GROUNDVEG | df$VEG_ZONE)
boxplot(df$Ni ~ df$COUN)
boxplot(log10(df$Ni) ~ df$COUN)
xyplot(log10(df$Ni) ~ df$U | df$VEG_ZONE)
xyplot(log10(df$Ni) ~ df$Zn | df$VEG_ZONE)
xyplot(log10(df$Ni) ~ log10(df$Zn) | df$COUN)
xyplot(log10(df$Ni) ~ log10(df$U) | df$COUN)
xyplot(log10(df$Ni) ~ log10(df$Zn) | df$COUN)
df.elem <-data.frame("Ni"=df$Ni, "Cu"=df$Cu, "Cd"=df$Cd, "As"=df$As, "Zn"=df$Zn, "Pb"=df$Pb, "Hg"=df$Hg)
chart.Correlation(df.elem)
library("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(df.elem)
xyplot(log10(df$Ni) ~ df$Cu | df$VEG_ZONE)
xyplot(log10(df$Ni) ~ log10(df$Cu) | df$VEG_ZONE)
plot(log10(df$Ni) ~ df$VEG_ZONE)
plot(log10(df$Ni) ~ df$VEG_ZONE)
plot(df.elem)
cor(df.elem)
chart.Correlation(df.elem)
# corolation of all data
chart.Correlation(ohorizon)
# corolation of all data
chart.Correlation(df)
pairs(df.n)
# corolation of all data
df.n <-df
pairs(df.n)
pairs(df.n[1:35])
pairs(df.n[1:10])
pairs(df.n[1:5])
pairs(df.n[2:5])
pairs(df.n[10:14])
# corolation of all data
#the data is too larg to make a pairs plot with it
pairs(df[10:14])
chart.Correlation(df)
boxplot(df$Ni ~ df$COUN)
boxplot(df$Ni ~ df$COUN)
boxplot(log10(df$Ni) ~ df$COUN)
plot(log10(df$Ni) ~ df$VEG_ZONE)
xyplot(log10(df$Ni) ~ log10(df$Zn) | df$COUN)
xyplot(log10(df$Ni) ~ log10(df$Cu) | df$VEG_ZONE)
pie(df@Ni ~ df$COUN)
pie(df@Ni,df$COUN)
boxplot(df$Ni ~ df$COUN)
boxplot(log10(df$Ni) ~ df$COUN)
plot(log10(df$Ni) ~ df$VEG_ZONE)
xyplot(log10(df$Ni) ~ log10(df$Zn) | df$COUN)
xyplot(log10(df$Ni) ~ log10(df$Cu) | df$VEG_ZONE)
#pie chart of ni in all countries
ni.rus <- subset(df$Ni, split.ohorizon1$COUN == 'RUS' )
ni.nor <- subset(df$Ni, split.ohorizon1$COUN == 'NOR' )
ni.FIN <- subset(df$Ni, split.ohorizon1$COUN == 'FIN' )
ni.all <- ni.rus + ni.fin + ni.nor
#pie chart of ni in all countries
ni.rus <- subset(df$Ni, split.ohorizon1$COUN == 'RUS' )
#pie chart of ni in all countries
ni.rus <- subset(df$Ni, df$COUN == 'RUS' )
ni.nor <- subset(df$Ni, df$COUN == 'NOR' )
ni.FIN <- subset(df$Ni, df$COUN == 'FIN' )
ni.all <- ni.rus + ni.fin + ni.nor
ni.fin <- subset(df$Ni, df$COUN == 'FIN' )
ni.all <- ni.rus + ni.fin + ni.nor
ni.all <- c(ni.rus, ni.fin, ni.nor)
head(ni.all)
# as data.frame
vegiDF <- data.frame(Name = c("Andrea","Eike", "Julia", "Linda", "Tobi"),
Vegetarian = c("yes", "no", "yes", "no", "no"))
vegiDF
ni.all <- data.frame( name= c("RUS", "FIN", "NOR"),Ni = c(ni.rus, ni.fin, ni.nor))
#pie chart of ni in all countries
ni.rus <- subset(df$Ni, df$COUN == 'RUS' )
ni.nor <- subset(df$Ni, df$COUN == 'NOR' )
ni.fin <- subset(df$Ni, df$COUN == 'FIN' )
ni.rus.sum <- sum(ni.rus)
ni.nor.sum <- sum(ni.nor)
ni.fin.sum <- sum(ni.fin)
ni.all <- data.frame( name= c("RUS", "FIN", "NOR"),Ni = c(ni.rus.sum, ni.fin.sum, ni.nor.sum))
pie(ni.all)
pie(ni.all$Ni,ni.all$name)
#pie chart of ni in all three countries
library(plotrix)
#pie chart of ni in all three countries
install.packages('plotrix')
#pie chart of ni in all three countries
#install.packages('plotrix')
library(plotrix)
pie3D(ni.all$Ni, ni.all$name)
lbl,explode
pie3D(ni.all$Ni, labels = ni.all$name = 0.1, main = "Pie Chart of Countries ")
#3d pie chart
pie3D(ni.all$Ni, labels = ni.all$name,explide = 0.1, main = "Pie Chart of Countries ")
#3d pie chart
pie3D(ni.all$Ni, labels = ni.all$name,explide = 0.1, main = "Pie Chart of Ni in Countries ")
library(StatDA)
library(ggplot2)
library(PerformanceAnalytics)
data(ohorizon)
#add the data to variable
df <- ohorizon
summary(df)
head(df)
#split the df to the important elements
df.elem <-data.frame("Ni"=df$Ni, "Cu"=df$Cu, "Cd"=df$Cd, "As"=df$As, "Zn"=df$Zn, "Pb"=df$Pb, "Hg"=df$Hg)
#make plot of the important element
plot(df.elem)
cor(df.elem)
# corolation of all data
#the data is too larg to make a pairs plot with it
pairs(df[10:14])
#we must search a way to find correlation between elemnt and the categoritical data
chart.Correlation(df)
chart.Correlation(df.elem)
#pie chart of ni in all three countries
#install.packages('plotrix')
library(plotrix)
ni.rus <- subset(df$Ni, df$COUN == 'RUS' )
ni.nor <- subset(df$Ni, df$COUN == 'NOR' )
ni.fin <- subset(df$Ni, df$COUN == 'FIN' )
ni.rus.sum <- sum(ni.rus)
ni.nor.sum <- sum(ni.nor)
ni.fin.sum <- sum(ni.fin)
ni.all <- data.frame( name= c("RUS", "FIN", "NOR"),Ni = c(ni.rus.sum, ni.fin.sum, ni.nor.sum), )
pie(ni.all$Ni,ni.all$name)
#3d pie chart
pie3D(ni.all$Ni, labels = ni.all$name,explide = 0.1, main = "Pie Chart of Ni in Countries ")
boxplot(df$Ni ~ df$COUN)
pie(ni.all$Ni,ni.all$name)
boxplot(df$Ni ~ df$COUN)
boxplot(log10(df$Ni) ~ df$COUN)
plot(log10(df$Ni) ~ df$VEG_ZONE)
boxplot(log10(df$Ni) ~ df$COUN)
plot(log10(df$Ni) ~ df$VEG_ZONE)
xyplot(log10(df$Ni) ~ log10(df$Zn) | df$COUN)
xyplot(log10(df$Ni) ~ log10(df$Cu) | df$VEG_ZONE)
#3d scaterplot
install.packages("scatterplot3d")
library(scatterplot3d)
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu))
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu),color=colors)
colors <- colors[as.numeric(log10(ohorizon$Ni))]
colors <- c("#999999", "#E69F00", "#56B4E9")
colors <- colors[as.numeric(log10(ohorizon$Ni))]
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu),color=colors)
colors <- colors[as.numeric(log10(ohorizon$Ni))]
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu),color=colors)
colors <- c("#999999", "#E69F00", "#56B4E9")
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu),color=colors)
colors <- c("#999999", "#E69F00")
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu),color=colors)
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu),angel= 40)
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu),angel= 70)
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu),angle= 70)
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu),angle= 30)
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu),angle= 90)
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu),angle= 20)
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu),angle= 50)
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu))
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu), angle = 60)
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu), angle = 60,main="3D Scatter Plot")
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu), angle = 60,main="3D Scatter Plot"
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)"))
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)"))
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)")
#the title of lab must be changed
scatterplot3d(log10(ohorizon$Ni),log10(ohorizon$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)",
pch = 16)
#the title of lab must be changed
shape = c(16, 17 ,18)
shapes <- shapes[as.numeric(df$Species)]
#the title of lab must be changed
install.packages('Shapes')
#the title of lab must be changed
install.packages('shapes')
#the title of lab must be changed
#install.packages('shapes')
library(shapes)
shape = c(16, 17 ,18)
shapes <- shapes[as.numeric(df$Species)]
shape = c(16, 17 ,18)
shapes <- shapes[as.numeric(df$Species)]
#the title of lab must be changed
#install.packages('shapes')
library(shapes)
shape = c(16, 17 ,18)
shapes <- shapes[as.numeric(df$Species)]
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)",
pch = 16)
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)",
pch = 23)
shapes <- shapes[as.numeric(df$shapes)]
####TEST####
data(iris)
head(iris)
shapes = c(16, 17, 18)
shapes <- shapes[as.numeric(iris$Species)]
scatterplot3d(iris[,1:3], pch = shapes)
tail(iris)
shapes = c(16, 17, 18)
scatterplot3d(iris[,1:3], pch = shapes)
shapes
shapes = c(16, 17, 18)
shapes <- shapes[as.numeric(iris$Species)]
shapes
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)",
pch = 23 , 16)
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)",
pch = 23, 16)
shape = c(16, 17)
shape = c(16, 17)
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)",
pch = 23, 16)
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)",
pch = shapes)
shapes <- shapes[as.numeric(df$Ni)]
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)",
pch = shapes)
shape = c(16, 17, 18)
shapes <- shapes[as.numeric(df$Ni)]
colors <- c("#999999", "#E69F00", "#56B4E9")
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)",
pch = shapes)
colors <- c("#999999", "#E69F00", "#56B4E9")
colors <- colors[as.numeric(df$Ni)]
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)",
pch = shapes)
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)",
pch = shapes, color=colors)
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)",
color=colors)
colors <- colors[as.numeric(df$Ni, df$Cu)]
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)",
color=colors)
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)",
c)
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)",
)
shape = c(16, 17)
shapes <- shapes[as.numeric(df$Ni)]
colors <- c("#999999", "#E69F00")
colors <- colors[as.numeric(df$Ni, df$Cu)]
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)", color = colors)
colors <- colors[as.numeric(log10(df$Ni),log10(df$Cu)]
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)", color = colors)
#the title of lab must be changed
#install.packages('shapes')
library(shapes)
shape = c(16, 17)
shapes <- shapes[as.numeric(df$Ni)]
colors <- c("#999999", "#E69F00")
colors <- colors[as.numeric(log10(df$Ni),log10(df$Cu)]
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)", color = colors )
colors <- colors[as.numeric(log10(df$Ni)]
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)", color = colors )
colors <- colors[as.numeric(log10(df$Cu)]
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)", color = colors )
colors <- c("#999999", "#E69F00")
colors <- colors[as.numeric(log10(df$Cu)]
colors <- colors[as.numeric(log10(df$Ni)]
colors <- colors[as.numeric(log10(df$Cu))]
scatterplot3d(log10(df$Ni),log10(df$Cu), angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)", color = colors )
