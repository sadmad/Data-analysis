authors <- data.frame(
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4))
authors <- data.frame(
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4)))
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4))
name = I(c("Tukey", "Venables", "Tierney",
"Ripley", "Ripley", "McNeil", "R Core")),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis",
"An Introduction to R"),
other.author = c(NA, "Ripley", NA, NA, NA, NA,
"Venables & Smith"))
name = I(c("Tukey", "Venables", "Tierney",
"Ripley", "Ripley", "McNeil", "R Core"),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis",
"An Introduction to R"),
other.author = c(NA, "Ripley", NA, NA, NA, NA,
"Venables & Smith"))
books <- data.frame(
name = I(c("Tukey", "Venables", "Tierney",
"Ripley", "Ripley", "McNeil", "R Core"),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis",
"An Introduction to R"),
other.author = c(NA, "Ripley", NA, NA, NA, NA,
"Venables & Smith"))
books
authors <- data.frame(
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4))
books <- data.frame(
authors <- data.frame(
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4)))
books <- data.frame(
name = I(c("Tukey", "Venables", "Tierney",
"Ripley", "Ripley", "McNeil", "R Core")),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis",
"An Introduction to R"),
other.author = c(NA, "Ripley", NA, NA, NA, NA,
"Venables & Smith"))
authors <- data.frame(
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4)))
books <- data.frame(
name = I(c("Tukey", "Venables", "Tierney",
"Ripley", "Ripley", "McNeil", "R Core")),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis",
"An Introduction to R"),
other.author = c(NA, "Ripley", NA, NA, NA, NA,
"Venables & Smith"))
View(books)
#install.packages("StatDA")
library(StatDA)
data(ohorizon)
ba <- ohorizon$Ba
n <- length(ba)
par(mfcol=c(2,2),mar=c(4,4,2,2))
edaplotlog(ba,H.freq=F,box=T,H.breaks=30,S.pch=3,S.cex=0.5,D.lwd=1.5,P.log=F,
P.main="",P.xlab="Ba [mg/kg]",P.ylab="Density",B.pch=3,B.cex=0.5,B.log=TRUE)
edaplot(log10(ba),H.freq=F,box=T,S.pch=3,S.cex=0.5,D.lwd=1.5,P.ylab="Density",
P.log=T,P.logfine=c(5,10),P.main="",P.xlab="Ba [mg/kg]",B.pch=3,B.cex=0.5)
plot(sort(ba),((1:n)-0.5)/n,pch=3,cex=0.8,
main="",xlab="Ba [mg/kg]",ylab="Probability",cex.lab=1,cex.lab=1.4)
abline(h=seq(0,1,by=0.1),lty=3,col=gray(0.5))
abline(v=seq(0,1400,by=200),lty=3,col=gray(0.5))
plot(sort(log10(ba)),((1:n)-0.5)/n,pch=3,cex=0.8,
main="",xlab="Ba [mg/kg]",ylab="Probability",cex.lab=1,xaxt="n",cex.lab=1.4)
axis(1,at=log10(alog<-sort(c((10^(-50:50))%*%t(c(5,10))))),labels=alog)
abline(h=seq(0,1,by=0.1),lty=3,col=gray(0.5))
abline(v=log10(alog),lty=3,col=gray(0.5))
library(ggplot2)
df <- movies <- movies[sample(nrow(movies), 1000), ]
qplot(rating,data=df,geom='histogram',binwidth=0.1,alpha=0.8)
library(ggplot2)
df <- ohorizon <- ohorizon[sample(nrow(ohorizon), 1000, replace = T), ]
head(df)
qplot(rating,data=df,geom='histogram',binwidth=0.1,alpha=0.8)
qplot(COUN,data=df,geom='histogram',binwidth=0.1,alpha=0.8)
qplot(YCOO,data=df,geom='histogram',binwidth=0.1,alpha=0.8)
str(ohorizon)
library(ggplot2)
df <- ohorizon <- ohorizon[sample(nrow(ohorizon), 1000, replace = T), ]
head(df)
qplot(YCOO,data=df,geom='histogram',binwidth=0.1,alpha=0.8)
qplot(HUMTHI,data=df,geom='histogram',binwidth=0.1,alpha=0.8)
library(StatDA)
library(ggplot2)
library(PerformanceAnalytics)
data(ohorizon)
df <- ohorizon
#add the data to variable
summary(df)
head(df)
##### (a) #####
#split the df to the important elements
df.elem <-data.frame("Ni"=df$Ni, "Cu"=df$Cu, "Cd"=df$Cd, "As"=df$As, "Zn"=df$Zn, "Pb"=df$Pb, "Hg"=df$Hg)
#make plot of the important element
plot(df.elem)
#first method of showing correlation
df.cor <- cor(df.elem)
#install.packages("GGally")
library(GGally)
ggcorr(df.cor)
#secont method of visualizing correlation
#install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(df.elem)
# plot of Zn and CU
plot(log10(df$Zn), log10(df$Cu), pch = 19)
abline(lm(log10(df$Zn) ~ log10(df$Cu)), col = "red")
#plot of Zn vs Cd without transformation
plot(df$Zn, df$Cd, pch = 19)
abline(lm(df$Zn ~ df$Cd))
abline(lm(df$Cd ~ df$Zn))
# plot of Zn and CU
plot(log10(df$Zn), log10(df$Cu), pch = 19)
abline(lm(log10(df$Cu) ~ log10(df$Zn)), col = "red")
#plot of Zn vs Cd without transformation
plot(df$Zn, df$Cd, pch = 19)
abline(lm(df$Cd ~ df$Zn), col = "red")
#plot of Zn vs Cd woth transformation
plot(log10(df$Zn), log10(df$Cd), pch = 19)
abline(log10(df$Cd)~ log10(df$Zn), col = "red")
# plot of Zn and CU
plot(log10(df$Zn), log10(df$Cu), pch = 19)
abline(lm(log10(df$Cu) ~ log10(df$Zn)), col = "red")
#plot of Zn vs Cd without transformation
plot(df$Zn, df$Cd, pch = 19)
abline(lm(df$Cd ~ df$Zn)), col = "red")
abline(lm(df$Cd ~ df$Zn), col = "red")
#plot of Zn vs Cd woth transformation
plot(log10(df$Zn), log10(df$Cd), pch = 19)
abline(lm(log10(df$Cd)~ log10(df$Zn)), col = "red")
#secont method of visualizing correlation
#install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(df.elem)
# plot of Zn and CU
plot(log10(df$Zn), log10(df$Cu), pch = 19)
abline(lm(log10(df$Cu) ~ log10(df$Zn)), col = "red")
#plot of Zn vs Cd without transformation
plot(df$Zn, df$Cd, pch = 19)
abline(lm(df$Cd ~ df$Zn), col = "red")
#plot of Zn vs Cd woth transformation
plot(log10(df$Zn), log10(df$Cd), pch = 19)
abline(lm(log10(df$Cd)~ log10(df$Zn)), col = "red")
# corolation of all data
#the data is too larg to make a pairs plot with it
pairs(df[10:14])
#pie chart of ni in all three countries
#install.packages('plotrix')
library(plotrix)
ni.rus <- subset(df$Ni, df$COUN == 'RUS' )
ni.nor <- subset(df$Ni, df$COUN == 'NOR' )
ni.fin <- subset(df$Ni, df$COUN == 'FIN' )
ni.rus.sum <- sum(ni.rus)
ni.nor.sum <- sum(ni.nor)
ni.fin.sum <- sum(ni.fin)
ni.all <- data.frame( name= c("RUS", "FIN", "NOR"),Ni = c(ni.rus.sum, ni.fin.sum, ni.nor.sum) )
pie(ni.all$Ni,ni.all$name)
#3d pie chart
pie3D(ni.all$Ni, labels = ni.all$name,explide = 0.1, main = "Pie Chart of Ni in Countries ")
#3d scaterplot
#install.packages("scatterplot3d")
#install.packages('GGally')
library(scatterplot3d)
colors <- c("#999999", "#E69F00")
#install.packages("GGally")
library(ggplot2)
#make a dataframe with country and our consideration of important elements
df.coun.el<-data.frame("COUN" = df$COUN, "Ni"= df$Ni, "Cu"= df$Cu, "Cd"= df$Cd,
"As"= df$As, "Zn"= df$Zn, "Pb"= df$Pb, "Hg"= df$Hg)
ggpairs(df.coun.el)
abline(df.coun.el, col = "red")
####TEST-scotter3d####
#install.packages("scatterplot3d")
library(scatterplot3d)
shapes = c(16, 17, 18)
shapes <- shapes[as.numeric(df.coun.el$COUN)]
par(mfrow=c(1,1))
scatterplot3d(df.coun.el$Ni, df.coun.el$Cu, pch = shapes)
scatterplot3d(log10(df.coun.el$Ni), log10(df.coun.el$Cu), pch = shapes)
scatterplot3d(df.coun.el$Ni, df.coun.el$Cu, pch = shapes)
scatterplot3d(log10(df.coun.el$Ni), log10(df.coun.el$Cu), pch = shapes)
#the title of lab must be changed
#install.packages('shapes')
library(shapes)
shapes = c(16, 17, 18)
shapes <- shapes[as.numeric(df$COUN)]
colors <- c("#999999", "#E69F00", '#E500aa')
colors <- colors[as.numeric(df$COUN)]
length(colors)
length(shapes)
length(df$COUN)
scatterplot3d(df[1:4], angle = 60,main="3D Scatter Plot",
xlab = "Sepal Length (cm)",
ylab = "Sepal Width (cm)",
zlab = "Petal Length (cm)", color = colors, pch = shapes )
###---kim---###
install.packages(c("rgl", "car"))
install.packages(c("rgl", "car"))
###---kim---###
#install.packages(c("rgl", "car"))
library("car")
library("rgl")
Ni <- log10(split.ohorizon1$Ni)
Cu <- log10(split.ohorizon1$Cu)
Cd <- log10(split.ohorizon1$Cd)
As <- log10(split.ohorizon1$As)
Zn <- log10(split.ohorizon1$Zn)
Pb <- log10(split.ohorizon1$Pb)
Hg <- log10(split.ohorizon1$Hg)
?scatter3d
scatter3d(Ni,Cu,Pb,point.col = "red", surface.alpha= 1)
#Possible values for fit are “linear”, “quadratic”, “smooth” and “additive”
scatter3d(Ni,Cu,Pb, groups = split.ohorizon1$VEG_ZONE, grid = FALSE, fit = "linear", surface = FALSE,
ellipsoid = TRUE, ellipsoid.alpha= 0.6)
scatter3d(Pb,Hg,Zn)
###---kim---###
#install.packages(c("rgl", "car"))
library("car")
###---kim---###
install.packages(c("rgl", "car"))
install.packages(c("rgl", "car"))
###---kim---###
#install.packages(c("rgl", "car"))
library("car")
library("rgl")
Ni <- log10(split.ohorizon1$Ni)
Cu <- log10(split.ohorizon1$Cu)
Cd <- log10(split.ohorizon1$Cd)
Ni <- log10(ohorizon$Ni)
Cu <- log10(ohorizon$Cu)
Cd <- log10(ohorizon$Cd)
As <- log10(ohorizon$As)
Zn <- log10(ohorizon$Zn)
Pb <- log10(ohorizon$Pb)
Hg <- log10(ohorizon$Hg)
scatter3d(Ni,Cu,Pb,point.col = "red", surface.alpha= 1)
#Possible values for fit are “linear”, “quadratic”, “smooth” and “additive”
scatter3d(Ni,Cu,Pb, groups = split.ohorizon1$VEG_ZONE, grid = FALSE, fit = "linear", surface = FALSE,
ellipsoid = TRUE, ellipsoid.alpha= 0.6)
scatter3d(Ni,Cu,Pb,point.col = "red", surface.alpha= 1)
scatter3d(Ni,Cu,Pb,point.col = "red", surface.alpha= 1)
?scatter3d
###---kim---###
install.packages(c("rgl", "car"))
install.packages(c("rgl", "car"))
install.packages(c("rgl", "car"))
library("car")
library(car)
library(rgl)
library(car)
###---kim---###
install.packages("rgl")
install.packages("rgl")
library(car)
install.package("car")
install.package("car")
install.packages("car")
###---kim---###
#install.packages("rgl")
#install.packages("car")
library(car)
###---kim---###
#install.packages("rgl")
#install.packages("car")
library(car)
###---kim---###
#install.packages("rgl")
install.packages("car")
library(car)
###---kim---###
#install.packages("rgl")
install.packages("car")
#####
boxplot(df$Ni ~ df$COUN)
boxplot(log10(df$Ni) ~ df$COUN)
plot(log10(df$Ni) ~ df$VEG_ZONE)
#install.packages('lattice')
library(lattice)
xyplot(log10(df$Ni) ~ log10(df$Zn) | df$COUN)
xyplot(log10(df$Ni) ~ log10(df$Cu) | df$VEG_ZONE)
xyplot(log10(df$Ni) ~ log10(df$Zn) | df$COUN)
xyplot(log10(df$Ni) ~ log10(df$Cu) | df$VEG_ZONE)
########average concentration#########
# a) countries
df.coun.el
aggregate(df.coun.el[,2:7], list(split.ohorizon1$COUN), mean)
########average concentration#########
# a) countries
#install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
df.coun.el
aggregate(df.coun.el[,2:7], list(split.ohorizon1$COUN), mean)
df.coun.el
aggregate(df.coun.el[,2:7], list(ohorizon$COUN), mean)
df.coun.el
aggregate(df.coun.el[,2:7], list(ohorizon$COUN), mean)
# b) vegetation
df.veg_zone.el <- data.frame("VEG_ZONE"=df$VEG_ZONE,
"Ni"=df$Ni, "Cu"=df$Cu,
"Cd"=df$Cd, "As"=df$As,
"Zn"=df$Zn,"Pb"=df$Pb, "Hg"=df$Hg)
df.veg_zone.el
aggregate(df.veg_zone.el[,2:7], list(ohorizon$VEG_ZONE), mean)
# c) lithologies
df.lito.el <- data.frame("LITO"=df$LITO,
"Ni"=df$Ni, "Cu"=df$Cu,
"Cd"=df$Cd, "As"=df$As,
"Zn"=df$Zn,"Pb"=df$Pb, "Hg"=df$Hg)
df.lito.el
aggregate(df.lito.el[,2:7], list(df.lito.el$LITO), mean)
# c) GROUNGVEG
df.graoundveg.el <- data.frame("GROUNDVEG"=df$GROUNDVEG,
"Ni"=df$Ni, "Cu"=df$Cu,
"Cd"=df$Cd, "As"=df$As,
"Zn"=df$Zn,"Pb"=df$Pb, "Hg"=df$Hg)
df.graoundveg.el
aggregate(df.graoundveg.el[,2:7], list(df.graoundveg.el$GROUNDVEG), mean)
aggregate(df.coun.el[,2:7], list(df.coun.el$COUN), mean)
df.lito.el
for(i in 1:length(df.lito.el$LITO)){
for(i in 1:length(df.lito.el$LITO)){
if (df.lito.el[i,1] == 9 | df.lito.el[i,1] == 10){
df.lito.el[i,1] <- 1
}else if (df.lito.el[i,1] == 51 | df.lito.el[i,1] == 52){
df.lito.el[i,1] <- 2
}else if (df.lito.el[i,1] == 81 | df.lito.el[i,1] == 82 | df.lito.el[i,1] == 83){
df.lito.el[i,1] <- 3
}else{
df.lito.el[i,1] <- 4
}
for(i in 1:length(df.lito.el$LITO)){
if (df.lito.el[i,1] == 9 | df.lito.el[i,1] == 10){
df.lito.el[i,1] <- 1
}else if (df.lito.el[i,1] == 51 | df.lito.el[i,1] == 52){
df.lito.el[i,1] <- 2
}else if (df.lito.el[i,1] == 81 | df.lito.el[i,1] == 82 | df.lito.el[i,1] == 83){
df.lito.el[i,1] <- 3
}else{
df.lito.el[i,1] <- 4
}
}
df.lito.el
View(df.lito.el)
View(df.lito.el)
# c) lithologies
df.lito.el <- data.frame("LITO"=df$LITO,
"Ni"=df$Ni, "Cu"=df$Cu,
"Cd"=df$Cd, "As"=df$As,
"Zn"=df$Zn,"Pb"=df$Pb, "Hg"=df$Hg)
df.lito.el
library(StatDA)
library(ggplot2)
library(PerformanceAnalytics)
data(ohorizon)
df <- ohorizon
#add the data to variable
summary(df)
head(df)
##### (a) #####
#split the df to the important elements
df.elem <-data.frame("Ni"=df$Ni, "Cu"=df$Cu, "Cd"=df$Cd, "As"=df$As, "Zn"=df$Zn, "Pb"=df$Pb, "Hg"=df$Hg)
#make plot of the important element
plot(df.elem)
#first method of showing correlation
df.cor <- cor(df.elem)
#install.packages("GGally")
library(GGally)
ggcorr(df.cor)
#secont method of visualizing correlation
#install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(df.elem)
# plot of Zn and CU
plot(log10(df$Zn), log10(df$Cu), pch = 19)
abline(lm(log10(df$Cu) ~ log10(df$Zn)), col = "red")
#plot of Zn vs Cd without transformation
plot(df$Zn, df$Cd, pch = 19)
abline(lm(df$Cd ~ df$Zn), col = "red")
# Load packages
library(MASS)
library(ggplot2)
library(lattice)
# Data
help(cabbages)
str(cabbages)
# Boxplot
bwplot(HeadWt ~ Cult | Date, data = cabbages)
# or
qplot(Date, HeadWt, geom="boxplot", fill=Cult, data = cabbages)
# or
qplot(Cult, HeadWt, geom="boxplot", fill=Date, data = cabbages)
# or
qplot(Date, HeadWt, geom="boxplot", facets = Cult ~ ., data = cabbages) + coord_flip()
# or
qplot(Cult, HeadWt, geom="boxplot", facets = Date ~ ., data = cabbages) + coord_flip()
# Scatter Plot
xyplot(VitC ~ HeadWt | Cult, data = cabbages)
# or
qplot(HeadWt, VitC, data=cabbages, facets=Cult ~ .)
# or
qplot(HeadWt, VitC, data=cabbages, color=Cult)
# or
qplot(Date, HeadWt, geom="boxplot", fill=Cult, data = cabbages)
# plot of Zn and CU
plot(log10(df$Zn), log10(df$Cu), pch = 19)
abline(lm(log10(df$Cu) ~ log10(df$Zn)), col = "red")
qplot(lm(log10(df$Cu), log10(df$Zn)), geom="boxplot", fill=Cult, data = df)
# Boxplot
bwplot(HeadWt ~ Cult | Date, data = cabbages)
# or
qplot(Cult, HeadWt, geom="boxplot", fill=Date, data = cabbages)
# or
qplot(Date, HeadWt, geom="boxplot", facets = Cult ~ ., data = cabbages) + coord_flip()
# or
qplot(Cult, HeadWt, geom="boxplot", facets = Date ~ ., data = cabbages) + coord_flip()
# or
qplot(Cult, HeadWt, geom="boxplot", fill=Date, data = cabbages)
qplot(lm(log10(df$Cu), log10(df$Zn)), geom="boxplot", fill=LITO, data = df)
# Data
help(cabbages)
str(cabbages)
library(StatDA)
library(ggplot2)
library(PerformanceAnalytics)
data(ohorizon)
df <- ohorizon
qplot(lm(log10(df$Cu), log10(df$Zn)), geom="boxplot", fill=LITO, data = df)
qplot(lm(log10(df$Cu), log10(df$Zn)), geom="boxplot", data = df)
qplot(log10(df$Cu), log10(df$Zn), geom="boxplot", data = df)
qplot(log10(df$Cu), log10(df$Zn), geom="boxplot", fill=LITO, data = df)
qplot(Cu, Zn, geom="boxplot", fill=LITO, data = df)
qplot(log10(Cu), log10(Zn), geom="boxplot", fill=LITO, data = df)
# plot of Zn and CU
plot(log10(df$Zn), log10(df$Cu), pch = 19)
abline(lm(log10(df$Cu) ~ log10(df$Zn)), col = "red")
#plot of Zn vs Cd without transformation
plot(df$Zn, df$Cd, pch = 19)
abline(lm(df$Cd ~ df$Zn), col = "red")
#plot of Zn vs Cd woth transformation
plot(log10(df$Zn), log10(df$Cd), pch = 19)
abline(lm(log10(df$Cd)~ log10(df$Zn)), col = "red")
# or
qplot(Date, HeadWt, geom="boxplot", fill=Cult, data = cabbages)
View(ohorizon)
qplot(log10(Cu), log10(Zn), geom="boxplot", fill=COUN, data = df)
#make plot of the important element
plot(df.elem)
#make plot of the important element
plot(df.elem)
##### (a) #####
#split the df to the important elements
df.elem <-data.frame("Ni"=df$Ni, "Cu"=df$Cu, "Cd"=df$Cd, "As"=df$As, "Zn"=df$Zn, "Pb"=df$Pb, "Hg"=df$Hg)
#make plot of the important element
plot(df.elem)
#first method of showing correlation
df.cor <- cor(df.elem)
#install.packages("GGally")
library(GGally)
ggcorr(df.cor)
#going through the correlations
qplot(log10(As), log10(Cu), geom="boxplot", fill=COUN, data = df)
# Boxplot
bwplot(HeadWt ~ Cult | Date, data = cabbages)
# or
qplot(Date, HeadWt, geom="boxplot", fill=Cult, data = cabbages)
# or
qplot(Cult, HeadWt, geom="boxplot", fill=Date, data = cabbages)
# or
qplot(Cult, HeadWt, geom="boxplot", fill=Date, data = cabbages)
# or
qplot(Date, HeadWt, geom="boxplot", facets = Cult ~ ., data = cabbages) + coord_flip()
# or
qplot(Cult, HeadWt, geom="boxplot", facets = Date ~ ., data = cabbages) + coord_flip()
qplot(log10(As), log10(Cu), geom="boxplot", facets = COUN ~ ., data = df) + coord_flip()
#secont method of visualizing correlation
#install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(df.elem)
qplot(log10(Ni), log10(Cu), geom="boxplot", facets = COUN ~ ., data = df) + coord_flip()
#Ni vs Cu
qplot(log10(Ni), log10(Cu), geom="boxplot", fill=COUN, data = df)
